!!!!!!Input Parameters!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$LaserPower = 75 !Laser power in watts                                                                            !
$BeamDiameter = 5.3 !Laser beam diameter in centimeters (make sure this matches your geometry!!!)                 !
$LaserWaveLength = 794.7 !Laser wavelength in nm                                                                  !
$LaserSpectralWidth = 0.3 !Beam spectral width in nanometers                                                      !
$XeFrac = 0.01 !Fraction of gas mixture that is xenon; balance is assumed to be helium                            !
$N2Frac = 0.10 !Fraction of gas mixture that is nitrogen; balance is assumed to be helium                         !
$CellT1 = 56 !Cell relaxation time in minutes                                                                   !
$BodyTemp = 140 !Body temperature of cell in Celius                                                               !
$Pres = 73 !Cell outlet pressure in psig                                                                          !
$FRate = 1.5 !Total flow rate in Standard Liters per Minute                                                       !
$InletDiameter = 7.9 !Inlet tube diameter in millimeters (make sure this matches your geometry)                   !
$InletCenterY = -114 !Inlet tube y position from origin in millimeters (make sure this matches your geometry)     !
$InletCenterZ = -38  !Inlet tube z position from origin in millimeters (make sure this matches your geometry)     !
$OutletCenterY = -114 !Outlet tube y position from origin in millimeters (make sure this matches your geometry)   !
$OutletCenterZ = 38   !Inlet tube z position from origin in millimeters (make sure this matches your geometry)    !
$ThermalConWall = 1.005 ! Thermal conductivity of the wall material in W/(Km)  https://www.engineeringtoolbox.com/thermal-conductivity-d_429.html                                   !
$ThicknessWall = 1e-3 !Thickness of the wall material in m                                                        !
$HeatTransCoeff = 35 ! Heat transfer coefficient of medium surrounding the cell (e.g. hot air or oil)  See https://www.engineeringtoolbox.com/convective-heat-transfer-d_430.html           !
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!Parameter Functions and Conversions(Don't Change Unless You Know What You Are Doing)!!

!Pressure in Pascal (needed for Navier-Stokes calculation)
$presconv = (14.7+Pres)*6894.76

!Inlet velocity in m/s. I'm pretty sure this is right. See the link to the 
!Maple worksheet in the documentation.
$inletvelocity = 21.22065907*FRate/((1+0.6802721088e-1*Pres)*InletDiameter^2)

!Rubidium frequency width

$rbfreqwidth = (14.7+Pres)/14.7*(18.9*XeFrac+17.8*N2Frac+18*(1-XeFrac-N2Frac))

!Rubidium Spin Destruction Rate
!rubidium-rubidium spin destruction term in m^3/(kg*s). See my notes and my thesis.
!Had to convert terms to m^3/(kg*s) for Rb density.

$function rbspindestrate(con,press,temp) import XeFrac, N2Frac{\
rubidiumterm = 2.746877211e5*con;\
amg = (press/101325)*(273.15/temp);\
n2den = amg*N2Frac;\
heden = amg*(1-N2Frac-XeFrac);\
xeden = amg*XeFrac;\
n2term = 170*(1+(temp+273.15-90)/194.36)*n2den;\
heterm = 24.6*(1+(temp+273.15-90)/94.6)*heden;\
xeterm = 2.44e5*xeden;\
xemolcterm = 6469/(XeFrac+1.1*N2Frac+3.2*(1-N2Frac-XeFrac));\
_rbspindestrate = rubidiumterm+n2term+heterm+xeterm+xemolcterm;\
}

!Spin-Exchange Term in m^3/(kg*s)
$function spinexchangerate(con){\
_spinexchangerate = 2.1129837e3*con;\
}

!Spin-Relaxation Rate; Chann and Nelson Paper, Ruset Thesis
$function spinrelaxationrate(press,temp) import XeFrac, N2Frac{\
HeFrac = 1-N2Frac-XeFrac;\
XeB = (5e-6)*XeFrac*(press/101325)*(273.15/temp);\
XeVW = 6.72e-5*(1/(1+0.25*HeFrac/XeFrac+1.05*N2Frac/XeFrac));\
_spinrelaxationrate = XeB+XeVW;\
}

!Rubidium Vapor Pressure in kg/m^3
$function rubidiumvaporpressure(temp){\
_rubidiumvaporpressure = 10^(10.55-4132/(temp))/(1.38e-16*(temp))/7.0432749e18;\
}

!Area of beam
$area = 3.14*(BeamDiameter/2*10^(-2))^2

!Laser power per photon. Used for Body Heat calculation
$LaserPhotonPower = (6.62607004e-34)*299792458/(LaserWaveLength*10^(-9))

!Velocity Distribution for Inlet. Fully developed flow. Approximate by cos function. 
!Fudge factor included from empirical measurement of resulting flow rate inletflow 

$function inletflow(y,z) import inletvelocity, InletDiameter, InletCenterY, InletCenterZ {\
rvalue = sqrt((y-InletCenterY/1000)^2+(z-InletCenterZ/1000)^2);\
inletradius = InletDiameter/(2*1000);\
_inletflow = 1.1569857841*2*inletvelocity*cos(3.14/2*rvalue/inletradius);\
}

$function outletflow(y,z) import inletvelocity, InletDiameter, OutletCenterY, OutletCenterZ {\
rvalue = sqrt((y-OutletCenterY/1000)^2+(z-OutletCenterZ/1000)^2);\
inletradius = InletDiameter/(2*1000);\
_outletflow = 1.1569857841*2*inletvelocity*cos(3.14/2*rvalue/inletradius);\
}

!Density function (not used when using Perfect Pressure), alter code so that it doesn't pass pressure into the function in the material and body force sections.
$function dens(temperature) import XeFrac, N2Frac,presconv {\
invmolar = (XeFrac/0.131293)+(N2Frac/0.028)+((1-XeFrac-N2Frac)/0.004);\
R = 8.3144598;\
Rspec = R*invmolar;\
_dens = presconv/(Rspec*temperature);\
}

!Evaporation Coeff; Hertz-Knudson equation for evaporation coefficient. See Fink et al. 2005
$function evapfunc(temperature) {\
R = 8.314;\
Na = 6.026*10^(23);\
kB = 1.38*10^(-23);\
rpi= 3.14;\
alpha = 1;\
M = 0.085;\
_evapfunc = (alpha*R*temperature)/(Na*sqrt(2*rpi*M/Na*kB*temperature));\
}

!Laser Heating Front Coefficient
$function heating(flux, concentration) import LaserPhotonPower {\
_heating = LaserPhotonPower*flux*7.0432749e24*concentration;\
}

!Rb Diffusion coefficient in He; from Chapman-Enkog derivation; from Bird, Stewart, and Lightfoot. Diffusion in m^2/s.
$function rbdifcoef(pressure,temp) {\
A=1.858e-3*10^(-4);\
presatm=pressure/101325;\
sigma = 3.24;\
MHe = 4.003;\
MRb = 85.4678;\
espK = 0.416e-2/8.6173303e-5;\
tprime = temp/espK;\
omega = (1.06036/tprime^(0.15610))+(0.19300/exp(0.47635*tprime))+(1.03587/exp(1.52296*tprime))+(1.76474/exp(3.89411*tprime));\
Mtot = sqrt(1/MHe+1/MRb);\
_rbdifcoef = (A*temp^(3/2)*Mtot)/(presatm*omega*sigma^2);\
}

!Xe Diffusion coefficient in He; same as Rb Diffusion coefficient from Bird, Stewart, and Lightfoot. Diffusion in m^2/s.
$function xedifcoef(pressure,temp) {\
A=1.858e-3*10^(-4);\
presatm=pressure/101325;\
sigmaHe = 2.576;\
sigmaXe = 4.009;\
KespHe = 10.02;\
KespXe = 234.7;\
mixKesp = sqrt(KespHe*KespXe);\
tprime = temp/mixKesp;\
omega = (1.06036/tprime^(0.15610))+(0.19300/exp(0.47635*tprime))+(1.03587/exp(1.52296*tprime))+(1.76474/exp(3.89411*tprime));\
sigma = 0.5*(sigmaHe+sigmaXe);\
MHe = 4.003;\
MXe = 131.29;\
Mtot = sqrt(1/MHe+1/MXe);\
_xedifcoef = (A*temp^(3/2)*Mtot)/(presatm*omega*sigma^2);\
} 

!Calculates Body Temperature in Kelvin
$Temp=BodyTemp+273.15

!Defines the Heat Transfer Coefficient for the Walls of the cell; see https://www.engineeringtoolbox.com/overall-heat-transfer-coefficient-d_434.html
$HTC = (1/HeatTransCoeff + ThicknessWall/ThermalConWall)^(-1)

!Trying to define viscocity as function of temperature and gas composition
!$function vis(temp) import N2Frac, XeFrac {\
!visN2temp = 1.66*(273.15+111)/(temp+111)*(temp/273.15)^(3/2);\
!visHetemp = 1.87*(273.15+79.4)/(temp+79.4)*(temp/273.15)^(3/2);\
!visXetemp = 2.12*(273.15+252)/(temp+252)*(temp/273.15)^(3/2);\
!_vis = ((1-N2Frac-XeFrac)*visHetemp^(1/3)+N2Frac*visN2temp^(1/3)+XeFrac*visXetemp^(1/3))^3;\
!}

!Defines the Heat Capacity ratio as a function of gas fraction, Note* Xe and He (gamma = 1.666) are assumed to be perfect
!monotonic gasses and N2 is assumed to be a perfect diatomic gas (gamma = 1.4).
$gamma = (5/2+N2Frac)/(3/2+N2Frac);
!$gamma = XeFrac*5/3 + N2Frac*7/5+(1-N2Frac-XeFrac)*5/3;

!Define heat capacity at constant pressure a function of gas fraction, He = 5196.118 N2 = 1039.67 Xe = 158.31 J/kg*K, from NIST Chemistry Webbook
!Need to use mass fraction instead of mole or volume fraction.
$function heatcap import N2Frac, XeFrac {\
avgmolarmass=XeFrac*131.293+N2Frac*28.0134+(1-N2Frac-XeFrac)*4.002602;\
Xemassfrac=XeFrac*131.293/avgmolarmass;\
N2massfrac=N2Frac*28.0134/avgmolarmass;\
Hemassfrac=(1-XeFrac-N2Frac)*4.0026202/avgmolarmass;\
_heatcap= XeFrac*158.31+N2Frac*1039.67+5196.118*(1-N2Frac-XeFrac);\
}
$cp=heatcap

!Calculation of Density that Elmer does (See manual notes) USE when Perfect Gas is compression model 
!$function dens(temp,pres) import cp, gamma {\
!R = ((gamma-1)/gamma)*cp;\
!_dens = pres/(temp*R);\
!}

!Decay Rate Coeff. (Xe Wall time using evaporation rate for diffusion)
$function decratecoeff(press,temp) import BeamDiameter, CellT1 {\
_decratecoeff = (xedifcoef(press,temp)/BeamDiameter)*(1+(BeamDiameter/sqrt(xedifcoef(press,temp)*CellT1*60))/tan(BeamDiameter/sqrt(xedifcoef(press,temp)*CellT1*60)));\
}
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Header
  CHECK KEYWORDS Warn
  Mesh DB "/home/ubuntu/seopmodels" "LargeCellRb"
  Include Path ""
  Results Directory ""
End

Simulation
  Max Output Level = 4
  Coordinate System = Cartesian
  Coordinate Mapping(3) = 1 2 3
  Simulation Type = Transient
  Steady State Max Iterations = 1
  Steady State Min Iterations = 1
  Output Intervals = 1

  Timestepping Method = BDF
  BDF Order = 1
  Timestep Intervals = 300
  Timestep Sizes = 0.1

  Solver Input File = XePolIncomp.sif
  Post File = 140rbdropcell.vtu
  Vtu Time Collection= Logical True

  Output File = cell.result
  Output Global Variables = True

  Set Dirichlet BCs by BC Numbering = Logical True

  !Restart File = cell.result
  !Restart Position = 500
  !Restart Time = 29.9
End

Constants
  !Gravity(4) = 0 -1 0 9.82
  !Stefan Boltzmann = 5.67e-08
  !Permittivity of Vacuum = 8.8542e-12
  !Boltzmann Constant = 1.3807e-23
  !Unit Charge = 1.602e-19
  
  !For SEOPSolver and BetaCalc
  rubidium wavelength = Real 794.7e-9
  rubidium frequency width = Real $rbfreqwidth*10^9
  laser wavelength = Real $LaserWaveLength*10^(-9)
  laser line width = Real $LaserSpectralWidth*10^(-9)
  oscillator strength = Real .33333333333333333
  laser area = Real $area
  laser power = Real $LaserPower
  N2Frac=Real $N2Frac
  XeFrac=Real $XeFrac
End

Body 1
  Target Bodies(1) = 2
  Name = "Cell Region"
  Equation = 2
  Material = 1
  Initial condition = 2
  Body Force = 2
End

Body 2
  Target Bodies(1) = 1
  Name = "Laser Region"
  Equation = 1
  Material = 1
  Body Force = 1
  Initial condition = 1
End

Solver 1
  Equation = Navier-Stokes
  Flow Model = Full
  Procedure = "FlowSolve" "FlowSolver"
  Variable = Flow Solution[Velocity:3 Pressure:1]
  Exec Solver = Always
  Stabilize = False
  Bubbles = True
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  
  Steady State Convergence Tolerance = 5e-2
  
  Nonlinear System Convergence Tolerance = 1e-7
  Nonlinear System Max Iterations = 100
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  
  Linear System Solver = Iterative
  !Linear System Iterative Method = GMRES
  !Linear System GMRES Restart = 200
  Linear System Iterative Method = BiCGStabl
  
  !Linear System Iterative Method = BiCGStab
  !Linear System Use Hypre = False
  
  Linear System Max Iterations = 1000
  Linear System Convergence Tolerance = 1e-10
  !BiCGstabl polynomial degree = 2
  
  Linear System Preconditioning = ILU2
  !Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = True
  Linear System Residual Output = 10
  Linear System Precondition Recompute = 1
End

Solver 2
  Equation = Advection Diffusion Equation
  Variable = Concentration
  Procedure = "AdvectionDiffusion" "AdvectionDiffusionSolver"
  Exec Solver = Always
  Stabilize = True
  Bubbles = False
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  Steady State Convergence Tolerance =5e-2
  Nonlinear System Convergence Tolerance = 1.0e-9
  Nonlinear System Max Iterations = 1
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStabl
  Linear System Max Iterations = 1000
  Linear System Convergence Tolerance = 1.0e-7
  BiCGstabl polynomial degree = 3
  Linear System Preconditioning = ILU2
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = True
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1

  Apply Limiter = Logical True
End

Solver 3
  Equation = SEOPSolver
  Discontinuous Galerkin = True
  Exported Variable 1 = Flux
  Variable = -nooutput DGFlux
  Limit Solution = True
  Procedure = "SEOPSolver" "SEOPSolver"
  Exec Solver = ALways
  Nonlinear Update Exported Variables = True
  
  Stabilize = True
  Bubbles = False
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  
  Steady State Convergence Tolerance = 5e-2
  
  Nonlinear System Convergence Tolerance = 1.0e-4
  Nonlinear System Max Iterations = 500
  Nonlinear System Newton After Iterations = 1000
  Nonlinear System Newton After Tolerance = 1.0e-10
  Nonlinear System Relaxation Factor = 1

  Linear System Solver = Iterative
  Linear System Iterative Method = BICGstabl
  !Linear System Use Hypre = False

  Linear System Max Iterations = 1000
  Linear System Convergence Tolerance = 1.0e-4
  BiCGstabl polynomial degree = 2
  Linear System Preconditioning = ILU1
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = True
  Linear System Residual Output = 10
  Linear System Precondition Recompute = 1
End

Solver 4
  Equation = XePol
  Variable = XePol
  Exported Variable 1 = XePol Field Source
  Procedure = "XePol" "XePol"
  Exec Solver = Always
  Nonlinear Update Exported Variables = True
  Stabilize = True
  Bubbles = False
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  Steady State Convergence Tolerance = 5.0e-2
  Nonlinear System Convergence Tolerance = 1.0e-5
  Nonlinear System Max Iterations = 1
  Nonlinear System Newton After Iterations = 1000
  Nonlinear System Newton After Tolerance = 1.0e-7
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStabl
  Linear System Max Iterations = 5000
  Linear System Convergence Tolerance = 1.0e-7
  BiCGstabl polynomial degree = 3
  Linear System Preconditioning = ILU2
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = True
  Linear System Residual Output = 2
  Linear System Precondition Recompute = 1

  Apply Limiter = Logical True
End

Solver 5
  Equation = Heat Equation
  Variable = Temperature
  Steady State Convergence Tolerance = 5.0e-2
  Exec Solver = Always
  Nonlinear System Convergence Tolerance = 1.0e-7
  Nonlinear System Max Iterations = 1
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Stabilize = True
  Bubbles = False
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-7
  BiCGstabl polynomial degree = 2
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = True
  Linear System Residual Output = 2
  Linear System Precondition Recompute = 1
End

Solver 6
  Exec Solver = after timestep
  Procedure = File "SaveData" "SaveMaterials"
  Parameter 1 = String SERate
  Parameter 2 = String Spin Destruction Rate
  Parameter 3 = String spinrelaxationrate
  Parameter 4 = String Rubidium Number Density
  Parameter 5 = String hs
  Parameter 6 = String Density
  Parameter 7 = String Concentration Diffusivity
  Parameter 8 = String XePol Diffusivity
  Parameter 9 = String Viscosity
  Parameter 10 = String HTC
  Parameter 11 = String decayrate
  Parameter 12 = String Heat Conductivity
End

Equation 1
  Name = "LaserRegion"
  Concentration Units = Absolute Mass
  Concentration Convection = Computed
  XePol Convection = String Computed
  Convection = Computed
  Flow Solution Name = String Flow Solution
  Active Solvers(6) = 1 2 3 4 5 6
End

Equation 2
  Name = "CellRegion"
  Concentration Units = Absolute Mass
  Concentration Convection = Computed
  XePol Convection = String Computed
  Convection = Computed
  Flow Solution Name = String Flow Solution
  Active Solvers(5) = 1 2 4 5 6
End

Material 1
  Name = "XenonMix"
  !Concentration Diffusivity = 3.9e-5
  !XePol Diffusivity = Real 8.7e-5
  !Concentration Diffusivity = 6.3e-6
  !XePol Diffusivity = Real 1.45e-5
  Concentration Diffusivity = Variable Pressure, Temperature; Real MATC "rbdifcoef(tx(0),tx(1))"
  XePol Diffusivity = Variable Pressure, Temperature; Real MATC "xedifcoef(tx(0),tx(1))/10"
  
  Viscosity = Variable Temperature; Real Procedure "SEOPvis" "SEOPvis"
  Compressibility Model = Incompressible

  !Reference Temperature=Real $Temp
  !Heat Expansion Coefficient = $1/Temp

  Spin Destruction Rate = Variable Concentration, Pressure, Temperature; MATC "rbspindestrate(tx(0),tx(1),tx(2))"
  Rubidium Number Density = Variable Concentration;MATC "7.043279e24*tx"
  
  Laser Direction 1 = 0
  Laser Direction 2 = 0
  Laser Direction  3 = -1

  Heat Conductivity = Variable Temperature; Real Procedure "SEOPtherm" "SEOPtherm"!0.151  
  Heat Capacity = $cp
  Specific Heat Ratio = $gamma
  Reference Pressure=0 

  Density = Variable Temperature; Real MATC "dens(tx(0))"
 
  
  Relative Permeability = 1.00000037
  
  DGFlux Lower Limit = 1e-2
  DGFlux Upper Limit = 1e20!Real Procedure "BetaCalc" "BetaCalc"

  SERate = Variable Concentration;Real MATC "spinexchangerate(tx)" 
  spinrelaxationrate = Variable Pressure, Temperature; Real MATC "spinrelaxationrate(tx(0),tx(1))"  
  Gamma = Variable Concentration, Pressure, Temperature;Real MATC "spinexchangerate(tx(0))+spinrelaxationrate(tx(1),tx(2))"
  
  !To be exported
  decayrate = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  HTC = Real $HTC
  hs = Variable DGFlux,Concentration,Temperature,Pressure;Real MATC "heating(tx(0),tx(1))*(rbspindestrate(tx(1),tx(3),tx(2))/(rbspindestrate(tx(1),tx(3),tx(2))+tx(0)))/dens(tx(2))"
End

Body Force 1
  Name = "BodyForce 1"
  DGFlux Source = 0

  XePol Field Source =  Variable DGFlux,Concentration,Temperature,Pressure;Real MATC "spinexchangerate(tx(1))*(tx(0)/(rbspindestrate(tx(1),tx(3),tx(2))+tx(0)))"

  Heat Source=Variable DGFlux,Concentration,Temperature,Pressure;Real MATC "heating(tx(0),tx(1))*(rbspindestrate(tx(1),tx(3),tx(2))/(rbspindestrate(tx(1),tx(3),tx(2))+tx(0)))/dens(tx(2))"
  Temperature Lower Limit = 300

  Flow BodyForce 1 = 0
  Flow BodyForce 2 = -9.8
  Flow BodyForce 3 = 0

  XePol Lower Limit = Real 1e-6
  XePol Upper Limit = Real 1

  Concentration Lower Limit = Real 1e-8
End

Body Force 2
  Name = "BodyForce 2
  
  DGFlux Source = 0
  
  XePol Field Source = 0

  Heat Source = 0
  Temperature Lower Limit = 300

  Flow BodyForce 1 = 0
  Flow BodyForce 2 = -9.8
  Flow BodyForce 3 = 0

  XePol Lower Limit = Real 1e-6
  XePol Upper Limit = Real 1

  Concentration Lower Limit = Real 1e-8
End

Initial Condition 1
  Name = "ICLaser"
  
  Concentration = Real MATC "rubidiumvaporpressure(Temp)"
  
  DGFlux = Variable Coordinate; Real Procedure "Beta_Calc" "BetaCalc"
  
  Pressure = $presconv+5
  Velocity 1 = 0
  Velocity 2 = 0
  Velocity 3 = 0
  
  XePol = Real 1e-5
  
  Temperature = $Temp

End

Initial Condition 2
  Name = "ICCell"

  Concentration = 1e-7
  
  Pressure = $presconv+5
  Velocity 1 = 0
  Velocity 2 = 0
  Velocity 3 = 0

  XePol = Real 1e-5

  Temperature = $Temp

End

Boundary Condition 1
  Target Boundaries(1) = 7 
  Name = "LaserFace"
  Noslip wall BC = True
  DGFlux = Variable Coordinate; Real Procedure "Beta_Calc" "BetaCalc"
  Concentration Flux = 0
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = $Temp
End

Boundary Condition 2
  Target Boundaries(1) = 1 
  Name = "Inlet"
  
  Velocity 3 = 0
  Velocity 1 = Variable Coordinate; Real MATC "inletflow(tx(1),tx(2))"
  Velocity 2 = 0
  Velocity 1 Condition = 1
  Velocity 2 Condition = 1
  Velocity 3 Condition = 1

  !External Pressure = $-presconv

  Concentration = 1e-7
  XePol = Real 1e-5
  Temperature = 300
End

Boundary Condition 3
  Target Boundaries(1) = 2 
  Name = "Outlet"
  External Pressure = $-presconv
  !Velocity 1 = Variable Coordinate; Real MATC "-outletflow(tx(1),tx(2))"
  Velocity 2 = 0 
  Velocity 3 = 0

  !Velocity 1 Condition = 1
  Velocity 2 Condition = 1
  Velocity 3 Condition = 1
End

Boundary Condition 4
  Target Boundaries(1) = 8 
  Name = "Walls"
  Noslip wall BC = True
  Concentration Flux = 0
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = $Temp
End

Boundary Condition 5
  Target Boundaries(1) = 9 
  Name = "Rb Wall"
  !Concentration = Variable Temperature; Real MATC "rubidiumvaporpressure(tx(0))"
  Mass Transfer Coefficient = Variable Temperature; Real MATC "evapfunc(tx(0))"
  External Concentration = Variable Temperature; Real MATC "rubidiumvaporpressure(tx(0))"
  Noslip wall BC = True
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = $Temp
End

Boundary Condition 6
  Target Boundaries(1) = 6
  Name = "RbSink"
  !Concentration = Variable Temperature; Real MATC "rubidiumvaporpressure(tx(0))"
  Mass Transfer Coefficient = Variable Temperature; Real MATC "evapfunc(tx(0))"
  External Concentration = Variable Temperature; Real MATC "rubidiumvaporpressure(tx(0))"
  Noslip wall BC = True
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = $Temp
End

Boundary Condition 7
  Target Boundaries (1) = 3
  Name = "CoolInlet"
  Noslip wall BC = True
  Concentration = 1e-7
  XePol = 1e-5
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = 300
End

Boundary Condition 8
  Target Boundaries (1) = 4
  Name = "CoolOutlet"
  Noslip wall BC = True
  Concentration Flux = 0
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = 300
End

Boundary Condition 9
  Target Boundaries (1) = 5
  Name = "Warmup"
  Noslip wall BC = True
  Concentration = 1e-7
  XePol = 1e-5
  Decay Rate Coefficient = Variable Pressure, Temperature; Real MATC "decratecoeff(tx(0),tx(1))" !1.6e-5
  Heat Transfer Coefficient = $HTC
  External Temperature = $Temp
End
